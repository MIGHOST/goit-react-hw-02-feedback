{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/utils/FeedbackName.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","container","FeedbackOptions","options","onLeaveFeedback","map","option","key","type","onClick","button","Statistics","good","neutral","bad","total","positivePercentage","list","Object","freeze","GOOD","NEUTRAL","BAD","Notification","message","text","values","FeedbackName","App","state","handleChange","e","feedbackText","target","textContent","setState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","percentage","Component","ReactDOM","render","document","getElementById"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,sBCAjED,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,6B,+NCeVC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,6BAASC,UAAWC,IAAOC,WACzB,wBAAIF,UAAWC,IAAOH,OAAQA,GAC7BC,I,gBCgBUI,EAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,4BACEC,IAAKD,EACLE,KAAK,SACLC,QAASL,EACTL,UAAWC,IAAOU,QAEjBJ,Q,gBCIMK,EAdI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,oCACE,wBAAIjB,UAAWC,IAAOiB,MACpB,oCAAUL,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,kDAAwBC,EAAxB,QCXOE,SAAOC,OAAO,CACzBC,KAAM,OACNC,QAAS,UACTC,IAAK,Q,iBCWMC,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,oCACE,wBAAIzB,UAAWC,IAAOyB,MAAOD,KCE7BrB,EAAUe,OAAOQ,OAAOC,GAETC,E,2MACnBC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPgB,aAAe,SAAAC,GACb,IAAMC,EAAeD,EAAEE,OAAOC,YAC9B,EAAKC,UAAS,SAAAN,GAAK,sBAChBG,EAAeH,EAAMG,GAAgB,O,EAI1CI,mBAAqB,WAAO,IAAD,EACM,EAAKP,MACpC,OAFyB,EACjBjB,KADiB,EACXC,QADW,EACFC,K,EAGzBuB,gCAAkC,WAAO,IAC/BzB,EAAS,EAAKiB,MAAdjB,KACFG,EAAQ,EAAKqB,qBACnB,OAAIrB,GACOH,EAAOG,EAAS,KAAKuB,UAEzB,G,wEAEC,IAAD,EACwBC,KAAKV,MAA5BjB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAawB,KAAKH,qBAClBI,EAAkBD,KAAKF,kCAC7B,OACE,6BACE,kBAAC,EAAD,CAASxC,MAAM,yBACb,kBAAC,EAAD,CACEM,QAASA,EACTC,gBAAiBmC,KAAKT,gBAG1B,kBAAC,EAAD,CAASjC,MAAM,aACZkB,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBwB,IAGtB,kBAAC,EAAD,CAAchB,QAAQ,4B,GAhDDiB,aCJjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.05d4d405.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2wVtC\",\"title\":\"Section_title__3Z23g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1XEXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2bAzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__U3FjQ\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.container}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.shape([]).isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <>\r\n    {options.map(option => (\r\n      <button\r\n        key={option}\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n        className={styles.button}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </>\r\n);\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <ul className={styles.list}>\r\n        <li>Good:{good}</li>\r\n        <li>Neutral:{neutral}</li>\r\n        <li>Bad:{bad}</li>\r\n        <li>Total:{total}</li>\r\n        <li>Positive feedback: {positivePercentage}%</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","export default Object.freeze({\r\n    GOOD: 'good',\r\n    NEUTRAL: 'neutral',\r\n    BAD: 'bad',\r\n  });","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <h2 className={styles.text}>{message}</h2>\r\n    </>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Section from '../Section/Section';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackName from '../utils/FeedbackName';\nimport Notification from '../Notification/Notification';\n\nconst options = Object.values(FeedbackName);\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleChange = e => {\n    const feedbackText = e.target.textContent;\n    this.setState(state => ({\n      [feedbackText]: state[feedbackText] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    if (total) {\n      return ((good / total) * 100).toFixed();\n    }\n    return 0;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = 0 || this.countTotalFeedback();\n    const percentage = 0 || this.countPositiveFeedbackPercentage();\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleChange}\n          />\n        </Section>\n        <Section title=\"Statistic\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={percentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}