{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/utils/FeedbackName.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","container","FeedbackOptions","options","onLeaveFeedback","map","option","key","type","onClick","button","Statistics","good","neutral","bad","total","positivePercentage","list","Object","freeze","GOOD","NEUTRAL","BAD","Notification","message","text","values","FeedbackName","App","state","handleChange","e","feedbackText","target","textContent","setState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","percentage","Component","ReactDOM","render","document","getElementById"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,sBCAjED,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,6B,+NCeVC,EAZC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACR,6BAASC,UAAWC,IAAOC,WACvB,wBAAIF,UAAWC,IAAOH,OAAQA,GAC7BC,I,gBCaEI,EAfS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OACvB,oCACAD,EAAQE,KAAI,SAAAC,GAAM,OAAG,4BAAQC,IAAKD,EAAQE,KAAK,SAChDC,QAASL,EACTL,UAAWC,IAAOU,QAASJ,Q,gBCQZK,EAZI,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAChD,OAAQ,oCACJ,wBAAIjB,UAAWC,IAAOiB,MAC1B,oCAAUL,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,kDAAwBC,EAAxB,QCZeE,SAAOC,OAAO,CACzBC,KAAM,OACNC,QAAS,UACTC,IAAK,Q,iBCYMC,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACJ,oCACI,wBAAIzB,UAAWC,IAAOyB,MAAOD,KCG3BrB,EAAUe,OAAOQ,OAAOC,GAGTC,E,2MACnBC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAINgB,aAAe,SAAAC,GACb,IAAMC,EAAaD,EAAEE,OAAOC,YAC5B,EAAKC,UAAS,SAAAN,GAAK,sBACjBG,EAAeH,EAAMG,GAAgB,O,EAK1CI,mBAAoB,WAAK,IAAD,EACS,EAAKP,MACpC,OAFsB,EACdjB,KADc,EACRC,QADQ,EACCC,K,EAGzBuB,gCAAkC,WAAO,IAC/BzB,EAAS,EAAKiB,MAAdjB,KACFG,EAAS,EAAKqB,qBACpB,OAAIrB,GACQH,EAAOG,EAAQ,KAAKuB,UAEzB,G,wEAEC,IAAD,EACwBC,KAAKV,MAA5BjB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAawB,KAAKH,qBAClBI,EAAkBD,KAAKF,kCAC7B,OACA,6BACE,kBAAC,EAAD,CAASxC,MAAM,yBACf,kBAAC,EAAD,CAAiBM,QAASA,EAASC,gBAAiBmC,KAAKT,gBAEzD,kBAAC,EAAD,CAASjC,MAAM,aACZkB,EAAM,EACT,kBAAC,EAAD,CAAYH,KAAMA,EAAMC,QAASA,EACjCC,IAAKA,EAAKC,MAAOA,EAChBC,mBAAoBwB,IACpB,kBAAC,EAAD,CAAchB,QAAQ,4B,GA1CIiB,aCNjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ece44769.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2wVtC\",\"title\":\"Section_title__3Z23g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1XEXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2bAzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__U3FjQ\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({title, children}) => (  \r\n        <section className={styles.container}>\r\n            <h2 className={styles.title}>{title}</h2>\r\n            {children}\r\n        </section>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.shape([]).isRequired \r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\r\n <>  \r\n{options.map(option=>(<button key={option} type=\"button\" \r\nonClick={onLeaveFeedback} \r\nclassName={styles.button}>{option} \r\n</button>))}\r\n\r\n</>\r\n)\r\nFeedbackOptions.propTypes={\r\n    options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default FeedbackOptions; ","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\n\r\n\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => {\r\nreturn  <>\r\n    <ul className={styles.list}>\r\n<li>Good:{good}</li>\r\n<li>Neutral:{neutral}</li>\r\n<li>Bad:{bad}</li>\r\n<li>Total:{total}</li>\r\n<li>Positive feedback: {positivePercentage}%</li>\r\n    </ul> \r\n</>\r\n}\r\n\r\nexport default Statistics; ","export default Object.freeze({\r\n    GOOD: 'good',\r\n    NEUTRAL: 'neutral',\r\n    BAD: 'bad',\r\n  });","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\nconst Notification = ({message}) => {\r\n    return (\r\n<>\r\n    <h2 className={styles.text}>{message}</h2>\r\n  \r\n</>        \r\n    );\r\n}\r\n\r\nNotification.propTypes ={\r\n    message: PropTypes.string.isRequired\r\n}\r\nexport default Notification;","import React, {Component} from 'react';\nimport './App.css';\nimport Section from '../Section/Section';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackName from \"../utils/FeedbackName\";\nimport Notification from '../Notification/Notification';\n\n\nconst options = Object.values(FeedbackName);\n\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n\n   handleChange = e =>{\n     const feedbackText=e.target.textContent;\n     this.setState(state => ({\n      [feedbackText]: state[feedbackText] + 1,\n    }));\n  \n   }\n\n  countTotalFeedback =()=>{\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total =  this.countTotalFeedback(); \n    if (total) {\n      return   (good / total * 100).toFixed()\n    }   \n    return 0;\n  }\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = 0 || this.countTotalFeedback();\n    const percentage = 0 || this.countPositiveFeedbackPercentage();\n    return (\n    <div>\n      <Section title=\"Please leave feedback\"> \n      <FeedbackOptions options={options} onLeaveFeedback={this.handleChange}/>        \n      </Section>\n      <Section title=\"Statistic\">\n        {total>0? (\n      <Statistics good={good} neutral={neutral} \n      bad={bad} total={total}\n       positivePercentage={percentage}/>) :(\n       <Notification message=\"No feedback given\"></Notification>)}\n      </Section>        \n      </div>\n    );  \n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}